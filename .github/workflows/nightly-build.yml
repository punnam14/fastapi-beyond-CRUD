name: Nightly Build

on:
  schedule:
    - cron: '25 18 * * *'
  workflow_dispatch:  

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start Services with Docker Compose
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          DOMAIN: ${{ secrets.DOMAIN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
        run: docker compose up -d  

      - name: Wait for Database to be Ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until docker exec $(docker ps -q -f name=web) pg_isready -h db -p 5432; do
            echo "Waiting for database..."
            sleep 5
          done
          echo "Database is ready!"

      - name: Run Database Migrations
        run: docker exec $(docker ps -q -f name=web) alembic upgrade head

      - name: Run Tests Inside Docker
        run: docker exec $(docker ps -q -f name=web) pytest
        continue-on-error: false  

      - name: Stop Docker Services
        run: docker compose down  

      - name: Build and Push Docker Image
        if: success()  
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-beyond-crud:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/fastapi-beyond-crud:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-beyond-crud:$(date +%Y%m%d)
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-beyond-crud:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-beyond-crud:$(date +%Y%m%d)

  notify-on-failure:
    needs: build-and-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Nightly Build Failed!"
          body: "The nightly build has failed. Check the logs for details."
          to: ${{ secrets.MAIL_USERNAME }}
          from: "GitHub Actions <${{ secrets.MAIL_FROM }}>"